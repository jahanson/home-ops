# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: morgoth
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: morgoth\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTFJPaUlVNWQwbDUvVFJFd1VpTnc1ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFME1URXhORFUxV2hjTk1qWXdOakV6TVRFeApORFUxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzVVL3ZzK0VKU2pUZ2VWbkNNd1k2bUhoS2hEMktwQTl3a25TdENLNTBPV0xCZEo2Q2IKdUM1aU1tMDM1UUpnWVJsa2xnc0hTNHNMd3d3ZUdCQld1cTIxMk1SQ3Y5b2F3ODdIWGdocDFBZkdVSFJPT2tpUApRTFZuVXhRNmdPSE1HTlJYbitvVTJIZG9ET3pmbW5NcWRoVWNyRGNsSGo1S1BBNzRoaHlrSTh4djNKdmp1Q05jCjh3REt4Y0pUcFplWVBFUFNNQ25NVEdsL3ptTTAvV2t6NExLeHhNNXhGUm1zSDhjK1NOQVFaOS9Iei9RV2J2MDcKNEl0NU5zcTE4V3RmV0tDcStPRlVsdTVRRUtnWTRKK1BIV3lBZjNLN3ljNCtMajRlL2lxM3NDS2hJN3ZFZWN4QgpSTzhYVklDUlkxaGlQcDd1VXF3U1lVVHlFNGFiaSs2UVNQZ2hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDVXVWbDV2NTJXblV1NjRZU0oySlNWQkRWTlF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIRTNMMk9Wc3kra084UTl3TjNlUllnWkpuSE11NWFiUlA2eVBJOEJNaW9kYUdSeWtZQmw5a1paClYxZmpydklxSm5uM1B5eGtsVlMweXYvcllsTWpnQ0UrRlF3OGZLOFhDcHNPSnZ5N2xDdlkzUHplRjhMZ1lqd3YKMTFhazU5dmMrekRTcHJCcGEvcWZ4TGo2bDJ0V2lDRnh6ckZadWhQc0tnMnhJZllpeFc4QldNczltQ1RYMVE3cQpoclhGOHBLMXpaVHV3Mmg3Rm9LYVpuckh0MUk4ZnA0YXJ1OWZEZWRlTDhWSUxNMGNXWWFZb2hEb2lCMHlERWhRCnF3dHVmWk5mcUowbGNUTUpMSGpBTjJ6MmRlZ3A4ZUQzYVhxb1J5bmk4VVJZYU9zc2Y0ZFhhaHBIaGRQeXRlZUIKMnV1d2pPTDlqd25iemRGOU9DT2tmamUzcm1lMXNRZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdVZQNzdQaENVbzA0SGxad2pNR09waDRTb1E5aXFRUGNKSjByUWl1ZERsaXdYU2VnCm03Z3VZakp0TitVQ1lHRVpaSllMQjB1TEM4TU1IaGdRVnJxdHRkakVRci9hR3NQT3gxNElhZFFIeGxCMFRqcEkKajBDMVoxTVVPb0RoekJqVVY1L3FGTmgzYUF6czM1cHpLbllWSEt3M0pSNCtTandPK0lZY3BDUE1iOXliNDdnagpYUE1BeXNYQ1U2V1htRHhEMGpBcHpFeHBmODVqTlAxcE0rQ3lzY1RPY1JVWnJCL0hQa2pRRUdmZng4LzBGbTc5Ck8rQ0xlVGJLdGZGclgxaWdxdmpoVkpidVVCQ29HT0Nmangxc2dIOXl1OG5PUGk0K0h2NHF0N0Fpb1NPN3hIbk0KUVVUdkYxU0FrV05ZWWo2ZTdsS3NFbUZFOGhPR200dnVrRWo0SVFJREFRQUJBb0lCQUdxSEN1MW91bjdISy9YTQpTLytzbHJtSDJiOTRuNFoxY0lvZlNhbE1kb2V6bFJURzNYd0UvNngwUGZGK0VzS2hyYjN5dlQ0aFB6aXdrZnVPCmEzM2U2bEQzMjhCZWxSa0RhbzJRMEpjOFNJZkc0VVBDSHNreE1kVEZuWUFQYXpzdEhvbUxvenIrUG95eHVVckMKZGVaM1g2Vk9uSmdhYlVXd2hnNTIwR25OSmdzNXNoVE1TVEZScDNhelMwaWNxZDVma0VqSlZQRnkwSFU5dStmRgpwcllRYVJKRmtYSjd5WkU0T0ZIdzlyN1ZIZ3VBcUJ6ZXFrVXZUTUptSnR4cVdSS0w1N0F6aiszWFkxaUhjaFlTCjU4RWJydktCQjNoRk1xeWZDTDQ0c2pSM2d1eE4yTHEramErazVwK21yS3BIRlZDRDQ4aEp5OWZ6RVJDSlN2WlUKWmdsTmh3RUNnWUVBemJqYUdFaWNRSExIK041L3JxT3htRnlUWkgzWXNmTXMyMURhRjgxQURkWFJzeFhZZUNpWAovSDNHTTlFYU95KzhsY3kwU2JaN0tweEhYdnI0RVd3SW1FWVhRaXFrR0hPdWxCbm0xSm10aDduQWlRUVlUY2VGCitvVGQ4cFVuVHNsN2lJMHo3VUovZXZEZE5TTHlsRnpOV1NWLzQ0Z2FqSURLLzBwenI3S2FBMUVDZ1lFQTVwOHEKaFp1eitkYnNOT1hlVFBlTW1pREkxN0Mwb1VRVU9pK1pwZGlPWll2RzFBQmRDZ1pFWTRnRnlGd0NXUUJpY2doYworV3dsYkxRQlpvSG5DbDN4bXZFd3BCaERtY3RmL05idmlGSDZSODA4WElJVDVaV2RFMjY3Z3Q5bTR5Sko2cVhMCndiRGVVdmFVNVB5a1N4YU5kMEY3eHdOSm1neFRCSWxZelZHcFU5RUNnWUI1Y3VHK2FFOW1kTnk5ZlkxZmFtQVUKRk1NbkZteHhVYUJ2c1dHdm40cHJJSW4xOGJXajZrTWYycGpDU25Yejd4Q2tWdjh3YlR4MVFXR1pId3lJTElFKwpkRktTeTEybzJkSjh1SFhmbVFJckdHd2o5M2pwb2hya2RNQWEwQmN1bWlBRjAyYU9jUzJWUk5FeTUzalNRWjh4Ck84UXViVkZQRlZIQ09RL203OGVnb1FLQmdIOG9UWUxEbWhWc1dtckVQN0VDWVNUdVpLOEFnR2ZXcUt4NGFHaFkKSWhOOVlWQ3RMcCtEV3h2aCtRWkRMUXd6dVJRVTVtYWtLWEpwUWNocVlhQ0dzZHR6bHhVelI3cTV0eUFxeG9ITQphWXBEY0QrMWZSRCtVRkJSb3RRREo3Q2V6RkN6djhmNUpHeHNCeWJHNGpPQXFObVRZcE1WamZTQlRSallQZjFmClJGU3hBb0dBZlJZR0dabGx6MVB1Yk80MzZDWDcvRzg1NS9lSlQrZVZicVl4bVJ2bTdqM0xQdGE2My9tM1E5azMKeVVkMzNYa0k1SlpQUzI3dEZLZjJRNlZreWlrSGk4Y3RsRXo1VVpHdmE1Z3VzZmU5UnRHSWFIdFFpTTJydHRLMwordUVUVmtxMXE4amNWZnhKTVVKZnJ4TU1EVDk2c1UyS2tpT2Nvc0xFdXBFNDN5R3dIOGs9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTFJPaUlVNWQwbDUvVFJFd1VpTnc1ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFME1URXhORFUxV2hjTk1qWXdOakV6TVRFeApORFUxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzVVL3ZzK0VKU2pUZ2VWbkNNd1k2bUhoS2hEMktwQTl3a25TdENLNTBPV0xCZEo2Q2IKdUM1aU1tMDM1UUpnWVJsa2xnc0hTNHNMd3d3ZUdCQld1cTIxMk1SQ3Y5b2F3ODdIWGdocDFBZkdVSFJPT2tpUApRTFZuVXhRNmdPSE1HTlJYbitvVTJIZG9ET3pmbW5NcWRoVWNyRGNsSGo1S1BBNzRoaHlrSTh4djNKdmp1Q05jCjh3REt4Y0pUcFplWVBFUFNNQ25NVEdsL3ptTTAvV2t6NExLeHhNNXhGUm1zSDhjK1NOQVFaOS9Iei9RV2J2MDcKNEl0NU5zcTE4V3RmV0tDcStPRlVsdTVRRUtnWTRKK1BIV3lBZjNLN3ljNCtMajRlL2lxM3NDS2hJN3ZFZWN4QgpSTzhYVklDUlkxaGlQcDd1VXF3U1lVVHlFNGFiaSs2UVNQZ2hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDVXVWbDV2NTJXblV1NjRZU0oySlNWQkRWTlF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIRTNMMk9Wc3kra084UTl3TjNlUllnWkpuSE11NWFiUlA2eVBJOEJNaW9kYUdSeWtZQmw5a1paClYxZmpydklxSm5uM1B5eGtsVlMweXYvcllsTWpnQ0UrRlF3OGZLOFhDcHNPSnZ5N2xDdlkzUHplRjhMZ1lqd3YKMTFhazU5dmMrekRTcHJCcGEvcWZ4TGo2bDJ0V2lDRnh6ckZadWhQc0tnMnhJZllpeFc4QldNczltQ1RYMVE3cQpoclhGOHBLMXpaVHV3Mmg3Rm9LYVpuckh0MUk4ZnA0YXJ1OWZEZWRlTDhWSUxNMGNXWWFZb2hEb2lCMHlERWhRCnF3dHVmWk5mcUowbGNUTUpMSGpBTjJ6MmRlZ3A4ZUQzYVhxb1J5bmk4VVJZYU9zc2Y0ZFhhaHBIaGRQeXRlZUIKMnV1d2pPTDlqd25iemRGOU9DT2tmamUzcm1lMXNRZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdVZQNzdQaENVbzA0SGxad2pNR09waDRTb1E5aXFRUGNKSjByUWl1ZERsaXdYU2VnCm03Z3VZakp0TitVQ1lHRVpaSllMQjB1TEM4TU1IaGdRVnJxdHRkakVRci9hR3NQT3gxNElhZFFIeGxCMFRqcEkKajBDMVoxTVVPb0RoekJqVVY1L3FGTmgzYUF6czM1cHpLbllWSEt3M0pSNCtTandPK0lZY3BDUE1iOXliNDdnagpYUE1BeXNYQ1U2V1htRHhEMGpBcHpFeHBmODVqTlAxcE0rQ3lzY1RPY1JVWnJCL0hQa2pRRUdmZng4LzBGbTc5Ck8rQ0xlVGJLdGZGclgxaWdxdmpoVkpidVVCQ29HT0Nmangxc2dIOXl1OG5PUGk0K0h2NHF0N0Fpb1NPN3hIbk0KUVVUdkYxU0FrV05ZWWo2ZTdsS3NFbUZFOGhPR200dnVrRWo0SVFJREFRQUJBb0lCQUdxSEN1MW91bjdISy9YTQpTLytzbHJtSDJiOTRuNFoxY0lvZlNhbE1kb2V6bFJURzNYd0UvNngwUGZGK0VzS2hyYjN5dlQ0aFB6aXdrZnVPCmEzM2U2bEQzMjhCZWxSa0RhbzJRMEpjOFNJZkc0VVBDSHNreE1kVEZuWUFQYXpzdEhvbUxvenIrUG95eHVVckMKZGVaM1g2Vk9uSmdhYlVXd2hnNTIwR25OSmdzNXNoVE1TVEZScDNhelMwaWNxZDVma0VqSlZQRnkwSFU5dStmRgpwcllRYVJKRmtYSjd5WkU0T0ZIdzlyN1ZIZ3VBcUJ6ZXFrVXZUTUptSnR4cVdSS0w1N0F6aiszWFkxaUhjaFlTCjU4RWJydktCQjNoRk1xeWZDTDQ0c2pSM2d1eE4yTHEramErazVwK21yS3BIRlZDRDQ4aEp5OWZ6RVJDSlN2WlUKWmdsTmh3RUNnWUVBemJqYUdFaWNRSExIK041L3JxT3htRnlUWkgzWXNmTXMyMURhRjgxQURkWFJzeFhZZUNpWAovSDNHTTlFYU95KzhsY3kwU2JaN0tweEhYdnI0RVd3SW1FWVhRaXFrR0hPdWxCbm0xSm10aDduQWlRUVlUY2VGCitvVGQ4cFVuVHNsN2lJMHo3VUovZXZEZE5TTHlsRnpOV1NWLzQ0Z2FqSURLLzBwenI3S2FBMUVDZ1lFQTVwOHEKaFp1eitkYnNOT1hlVFBlTW1pREkxN0Mwb1VRVU9pK1pwZGlPWll2RzFBQmRDZ1pFWTRnRnlGd0NXUUJpY2doYworV3dsYkxRQlpvSG5DbDN4bXZFd3BCaERtY3RmL05idmlGSDZSODA4WElJVDVaV2RFMjY3Z3Q5bTR5Sko2cVhMCndiRGVVdmFVNVB5a1N4YU5kMEY3eHdOSm1neFRCSWxZelZHcFU5RUNnWUI1Y3VHK2FFOW1kTnk5ZlkxZmFtQVUKRk1NbkZteHhVYUJ2c1dHdm40cHJJSW4xOGJXajZrTWYycGpDU25Yejd4Q2tWdjh3YlR4MVFXR1pId3lJTElFKwpkRktTeTEybzJkSjh1SFhmbVFJckdHd2o5M2pwb2hya2RNQWEwQmN1bWlBRjAyYU9jUzJWUk5FeTUzalNRWjh4Ck84UXViVkZQRlZIQ09RL203OGVnb1FLQmdIOG9UWUxEbWhWc1dtckVQN0VDWVNUdVpLOEFnR2ZXcUt4NGFHaFkKSWhOOVlWQ3RMcCtEV3h2aCtRWkRMUXd6dVJRVTVtYWtLWEpwUWNocVlhQ0dzZHR6bHhVelI3cTV0eUFxeG9ITQphWXBEY0QrMWZSRCtVRkJSb3RRREo3Q2V6RkN6djhmNUpHeHNCeWJHNGpPQXFObVRZcE1WamZTQlRSallQZjFmClJGU3hBb0dBZlJZR0dabGx6MVB1Yk80MzZDWDcvRzg1NS9lSlQrZVZicVl4bVJ2bTdqM0xQdGE2My9tM1E5azMKeVVkMzNYa0k1SlpQUzI3dEZLZjJRNlZreWlrSGk4Y3RsRXo1VVpHdmE1Z3VzZmU5UnRHSWFIdFFpTTJydHRLMwordUVUVmtxMXE4amNWZnhKTVVKZnJ4TU1EVDk2c1UyS2tpT2Nvc0xFdXBFNDN5R3dIOGs9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTFJPaUlVNWQwbDUvVFJFd1VpTnc1ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFME1URXhORFUxV2hjTk1qWXdOakV6TVRFeApORFUxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzVVL3ZzK0VKU2pUZ2VWbkNNd1k2bUhoS2hEMktwQTl3a25TdENLNTBPV0xCZEo2Q2IKdUM1aU1tMDM1UUpnWVJsa2xnc0hTNHNMd3d3ZUdCQld1cTIxMk1SQ3Y5b2F3ODdIWGdocDFBZkdVSFJPT2tpUApRTFZuVXhRNmdPSE1HTlJYbitvVTJIZG9ET3pmbW5NcWRoVWNyRGNsSGo1S1BBNzRoaHlrSTh4djNKdmp1Q05jCjh3REt4Y0pUcFplWVBFUFNNQ25NVEdsL3ptTTAvV2t6NExLeHhNNXhGUm1zSDhjK1NOQVFaOS9Iei9RV2J2MDcKNEl0NU5zcTE4V3RmV0tDcStPRlVsdTVRRUtnWTRKK1BIV3lBZjNLN3ljNCtMajRlL2lxM3NDS2hJN3ZFZWN4QgpSTzhYVklDUlkxaGlQcDd1VXF3U1lVVHlFNGFiaSs2UVNQZ2hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDVXVWbDV2NTJXblV1NjRZU0oySlNWQkRWTlF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIRTNMMk9Wc3kra084UTl3TjNlUllnWkpuSE11NWFiUlA2eVBJOEJNaW9kYUdSeWtZQmw5a1paClYxZmpydklxSm5uM1B5eGtsVlMweXYvcllsTWpnQ0UrRlF3OGZLOFhDcHNPSnZ5N2xDdlkzUHplRjhMZ1lqd3YKMTFhazU5dmMrekRTcHJCcGEvcWZ4TGo2bDJ0V2lDRnh6ckZadWhQc0tnMnhJZllpeFc4QldNczltQ1RYMVE3cQpoclhGOHBLMXpaVHV3Mmg3Rm9LYVpuckh0MUk4ZnA0YXJ1OWZEZWRlTDhWSUxNMGNXWWFZb2hEb2lCMHlERWhRCnF3dHVmWk5mcUowbGNUTUpMSGpBTjJ6MmRlZ3A4ZUQzYVhxb1J5bmk4VVJZYU9zc2Y0ZFhhaHBIaGRQeXRlZUIKMnV1d2pPTDlqd25iemRGOU9DT2tmamUzcm1lMXNRZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUVNwaUdqcVBZQ3BNTytJMWF0MjB6VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFME1URXhORFUxV2hjTk1qWXdOakV6TVRFeApORFUxV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDK3RpbjJaL001aG5kZFFWNlZ0QUllNDhxbUNBdWMKcXBwdWYyVWQrZmdocC9OQk5PQkdwa2oyeEVzblBieVI0RkQ5UFY4YVZOeGhaUGVDcVJPTDVnb1ZWWE8xb0hxRwpmUzFhVDdwZ1VNOTg1M1pyRDVVTTZ3elBDTnFDSXplSGQ2aGdKYmo0NVJjWFdqdHBpdkFKQlM0K0MxUGVhUmNzCkhYWXhrSVorbjRnUElhME9CdGdxVkM1cGo3Yko1ZjhUU1ZXcmNyYndtUGhoRzZqeXQ4NGh5V3Z2UFdQbC8zejYKRFpObG0vaFZtN0kwVHRuZmhYS3NETnNrSlE5NHI1ZnVXQ0d6RWxtN2FLeXB3L21vblpZMExXdlZPakVBaUg0RwpTME1zSW01ZU9pVHFTWUY2a0FCSGc2ZHRVenU4TlpSUngrVmV6MmtxekM1SUl3ZEpwVC9XZ2pFMUFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZBbExsWmViK2RscDFMdXVHRWlkaVVsUQpRMVRVTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFTSC90K1VCY0FWQjBNby9rcUdjMm43b2dJakxpaFdpb1Q5SFBDVEhXcTBHS3NJTWUKb1pHREk0U0NuNXFMbnZ4R2tkTFAxMnpzVFhRL09vckdUallNTk1ic091YzNYanVibFRZT29OVlkxOGdUa2xDQwpDcjFlbm1EeEZ5TzdJQW94MklIQllBWHFSRlVaVHpWTFRFQ2M0M2RFeUdZWXJPeTgyQ1lRUzNsVnhPTnkrcWN1CmZKa0lSY0hUbzhVNWpKaTNxc0lxM1RJb1cwYm1sQ3d1OUVPdlJHbnc5VjREa1BlOGw0SVhLSDV0TG80MllkTHgKbTkzaVU3SlJhWmJrMmdQMksvVGdZaEdxTTdLYjkzL2lPWmh6ZTYwdGJVUEtiSGRLUWRtRFRYa0NoTGt2TTJhawo1L1U1b1htRXRjaXVPZEE3d3c1K2htY1NXSEZBVC8zeG9XYW04QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdnJZcDltZnpPWVozWFVGZWxiUUNIdVBLcGdnTG5LcWFibjlsSGZuNElhZnpRVFRnClJxWkk5c1JMSnoyOGtlQlEvVDFmR2xUY1lXVDNncWtUaStZS0ZWVnp0YUI2aG4wdFdrKzZZRkRQZk9kMmF3K1YKRE9zTXp3amFnaU0zaDNlb1lDVzQrT1VYRjFvN2FZcndDUVV1UGd0VDNta1hMQjEyTVpDR2ZwK0lEeUd0RGdiWQpLbFF1YVkrMnllWC9FMGxWcTNLMjhKajRZUnVvOHJmT0ljbHI3ejFqNWY5OCtnMlRaWnY0Vlp1eU5FN1ozNFZ5CnJBemJKQ1VQZUsrWDdsZ2hzeEpadTJpc3FjUDVxSjJXTkMxcjFUb3hBSWgrQmt0RExDSnVYam9rNmttQmVwQUEKUjRPbmJWTTd2RFdVVWNmbFhzOXBLc3d1U0NNSFNhVS8xb0l4TlFJREFRQUJBb0lCQVFDa1dad2tDMFVpUisxSgo0bkcrbFZoV2dudzdSU2VzcGFGY3BGRGgybStwb1hFU3VweWtoZHpQUEM1LzdNWTYrSk1UQ2ZhUlhKeG5Hbm5xCmtnYVVRM1JoR2prVFJ1OFFRNFA0RmtsSmc1cXJ5MVRUd3FQeWRBV2Z6Y053N3lTRmkrc0FvTUdkVE4vdmNnVk4KV1R5dXFWWkdoY0NMSlFtaExPcVVvRFlublJmRjRRTWxDb3VrMW90N2JoUWsrK1NsTGlOb0dmN2E5d2V0YUwwVgpvN3NRc2NaN1lQOWxtVjBsaDJZTmU0eWxOZi9vY04wS1piQTNXdlF0NVBvSUNpc2hPOHFSaXU0cWlEa1VUczY3Cm4rYkdvU01nampjWmVaY1MxbERyMU1RbVdIelFUeWlGUVhBWHU5UUdYSWdlQmQvdHlmUGhEQ1NXdVgwMkVRY2gKUlloMGF1d3BBb0dCQVBKMmZuSUZUZnV1S1VOa0Z3S0c3ZXNoM0dQbmhhMmFtMzZ4TzUzNXBCbHdVU1N1ZGtpTAp5SlZjZGE4WW5vZ3F2aDBZVHpEeUgwaStKRmhXOTBZNXdOcTVON2hwRjhmcEdiK1B6cndTY2FMUzhQSzBnWWhQCjRaVnIrR3hCK1ZzY2JQdEVwK2h1eWRETGh1YlZUQ0MvditWSHUwRjNHNTR2bkxvYXlGakoycjVQQW9HQkFNbGIKL2Y1R2NxRCsyOEE3V3RCcHBFOGFydENmekdwUDdCMVJVWjBLVTF4SUFheVpLSnZZZkxxUkJBSkowcDFuRW9ERQpuLzVpR0t2WFpjbGs0RXJvdHBjZUtkMGVyN083c0VLRVMyUkwyaVdHQlFBQUhCa1gyZkFIRmJGT0FyWXpjd1E0CkJPRUZ0OTlPakNDMXBCNXdKU0VWZmY4RmJIYWJEcTFXMXJHbEdoczdBb0dCQUpjZGZ5VjFaT3N0MnczamZldlgKU01XNXJ2Q2RSZFd6ZktKenQrSjN5dTBIOGFyWkNXT2hxM3hieWdVOVpPRWRNcXhUa0ZmREwvaFllYktOVVVSMQpqbHRFQVJSd2U1L2ZDbXM0Si9OVDAzdFYyVktMYWdnWk1WRzluM0ZwbFE1U0l5SmY0ZjZkdmk3aUNzd251SERZCjBiTUhDQkIvT2JsWGwyanVkRnZTUXdGRkFvR0FVTWkwZFRCa1NzMFU4dUdkUktJdGhvTUpBYkFxdmJoRTNWcEQKcVFKOGdUaHVXNFd5OGh0L3B3WUpHclh0WnJMMGpHN1dWYU9iakUzRmkzQUtRR051NWQvM0lieHU5MmZraGpzMwpXQXpLZjJWdVdocXhLeXdUaHFZQkFQcHdRaE1RSVBBc25PN0RYemJQSjB4WWhOR3ZRNyt3cGdEU0RCK1hXdG5OCkZzWkxYQU1DZ1lFQXVVZ0xjYmptSjNmVy9BcXFSOHAyMHUwcXBWdUJtNUZQdzJiS1RiNklqREFmNUJIQmk2ZDQKUi9ueUEralR0c1hLaTVpTUhtODd1UnFDcWl4Um85UXhNNVNKU2JkeCtiV05TZWRWNW85QkN0bFFIaWdubDR4RQoyNjh0eWVhVGJUQ1pMaXY4MmhFZVpoZm5MTS9DcHIxNVlJc1NXcnF4Yng1QW5CejM0RnZKVkpnPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTFJPaUlVNWQwbDUvVFJFd1VpTnc1ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFME1URXhORFUxV2hjTk1qWXdOakV6TVRFeApORFUxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzVVL3ZzK0VKU2pUZ2VWbkNNd1k2bUhoS2hEMktwQTl3a25TdENLNTBPV0xCZEo2Q2IKdUM1aU1tMDM1UUpnWVJsa2xnc0hTNHNMd3d3ZUdCQld1cTIxMk1SQ3Y5b2F3ODdIWGdocDFBZkdVSFJPT2tpUApRTFZuVXhRNmdPSE1HTlJYbitvVTJIZG9ET3pmbW5NcWRoVWNyRGNsSGo1S1BBNzRoaHlrSTh4djNKdmp1Q05jCjh3REt4Y0pUcFplWVBFUFNNQ25NVEdsL3ptTTAvV2t6NExLeHhNNXhGUm1zSDhjK1NOQVFaOS9Iei9RV2J2MDcKNEl0NU5zcTE4V3RmV0tDcStPRlVsdTVRRUtnWTRKK1BIV3lBZjNLN3ljNCtMajRlL2lxM3NDS2hJN3ZFZWN4QgpSTzhYVklDUlkxaGlQcDd1VXF3U1lVVHlFNGFiaSs2UVNQZ2hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDVXVWbDV2NTJXblV1NjRZU0oySlNWQkRWTlF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIRTNMMk9Wc3kra084UTl3TjNlUllnWkpuSE11NWFiUlA2eVBJOEJNaW9kYUdSeWtZQmw5a1paClYxZmpydklxSm5uM1B5eGtsVlMweXYvcllsTWpnQ0UrRlF3OGZLOFhDcHNPSnZ5N2xDdlkzUHplRjhMZ1lqd3YKMTFhazU5dmMrekRTcHJCcGEvcWZ4TGo2bDJ0V2lDRnh6ckZadWhQc0tnMnhJZllpeFc4QldNczltQ1RYMVE3cQpoclhGOHBLMXpaVHV3Mmg3Rm9LYVpuckh0MUk4ZnA0YXJ1OWZEZWRlTDhWSUxNMGNXWWFZb2hEb2lCMHlERWhRCnF3dHVmWk5mcUowbGNUTUpMSGpBTjJ6MmRlZ3A4ZUQzYVhxb1J5bmk4VVJZYU9zc2Y0ZFhhaHBIaGRQeXRlZUIKMnV1d2pPTDlqd25iemRGOU9DT2tmamUzcm1lMXNRZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRQk5ubmVQOTVGN0JrU0JhS1FkVGJlakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFME1URXhORFUxV2hjTk1qWXdOakV6TVRFeApORFUxV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbTF2Y21kdmRHZ3VhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMDdnMXNnSW1DelRBZ2lrN2lKOHMKUnhiM1QxaFNRczVQZVQ3VS9acCtmZCtDOHN1VWx1azVXblptRWhkam9RYVlWdnp4UmdKZ2FLbzdoeEtLaUFMMAp2ckQwWWcyWmhLV1hpVmxLTXFDWTgwNXE0VjRpSlpzK2N0R2lFQWcvT29EdzV0TkUxcnVHRjVqR3JYaFd6SmtLClk3WGQ1cWMwUkNUa21mbWpXTWRKM0FpaVFOcklyY2J0bW9xNUJWaUp2cGVwZER6UHgyYkJMSnhJQzJyRE52RnYKTzkvVWdFN1orVk1tUDBSVzkxaVBKTTliYXg0UzlaMGlwWThBOE01V0hmUDRLK0VxaTdBSGxaWGpaMmRqNGZrbgo3VmNqVldYOW5pbVg1LzNxRzB6VXlaZzhmWVY2YlZSNVkvNExZeGZWUjI0YW9KWDNjb2U5NWZ1S2VsSDhvdGN3CitRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRSlM1V1htL25aYWRTNwpyaGhJbllsSlVFTlUxREFxQmdOVkhSRUVJekFoZ2g4cUxtMXZjbWR2ZEdndWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCUUdqV053RWcvQUQ0S01qSGVtUktSVTBySnNRaHAKR1VjeFJpWXFINjdWU1NKdWJpeEYwQjcwRU50Zklqc0tZdzhiK3VmbnNETE1ENTlBd0FpMzYxOGtYdEdTZUZjNQo0OUhmaVQvTVdGS09CRkMxdHpDdk5pZVpYMVVRRmRNeGRxVW5Id29PNXZJYWt0MUxQREFYNTRjMDB3UUlUdWdFCjBZNEpLWWhzUDZKeVoxNDVQc2s0bi8xenNuNjZjbTFlTGR0aU0xV00vR0R3MkZjSjlFNzZ5cjVoK0ZpenJ2UE8KVlZtNGFDbWVUSnZxRFhnaTFSY2dvb0plT3hDTFZsdXhhUGhhMEhBWVlXaXhJNm1XRHBQMGNsMG9JbXRERmZQWQpESGN3a2NocVRqQzBiVWxTVWpDbm04NUNQWW5tWmtuY1UwKzVNbWZNQ1Y5Wk1va0JSWEl2TjhObQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMDdnMXNnSW1DelRBZ2lrN2lKOHNSeGIzVDFoU1FzNVBlVDdVL1pwK2ZkK0M4c3VVCmx1azVXblptRWhkam9RYVlWdnp4UmdKZ2FLbzdoeEtLaUFMMHZyRDBZZzJaaEtXWGlWbEtNcUNZODA1cTRWNGkKSlpzK2N0R2lFQWcvT29EdzV0TkUxcnVHRjVqR3JYaFd6SmtLWTdYZDVxYzBSQ1RrbWZtaldNZEozQWlpUU5ySQpyY2J0bW9xNUJWaUp2cGVwZER6UHgyYkJMSnhJQzJyRE52RnZPOS9VZ0U3WitWTW1QMFJXOTFpUEpNOWJheDRTCjlaMGlwWThBOE01V0hmUDRLK0VxaTdBSGxaWGpaMmRqNGZrbjdWY2pWV1g5bmltWDUvM3FHMHpVeVpnOGZZVjYKYlZSNVkvNExZeGZWUjI0YW9KWDNjb2U5NWZ1S2VsSDhvdGN3K1FJREFRQUJBb0lCQVFDSytYRXRydUZnRzdsOQo5eWpnRG5QWEdra3VhVEJlTCtUVkZweGk5K1d1SkdobGphSzB5TlRmLzdZU2pBM1c1bWhiT1YvNjc1WnZQY2NqCmE5VkpZSDlkS1BUUjVGRndVKzQ3dDBQUUpjRWdmTW9GczIvQXRiM3hTcEFSN0FmdEZEU05vQUtnM2Frd2xoVmMKU3hEVzdtSjJmeXZ3dXJMQlJHSldmQnB3TFNqYmFCR3l5ZXpwRzI2YVV1YUcvV1E4QUlRNmd5VmhXcnpNVWpHZwpFR2JyV2JVVTRFMDc2VHdHL2lab2lWdngxUHEzME1zWXE5WUZOVWZkVnJFaWpGTjZpTjF4MzJXRmhLZUs4NnMrCklTWGxsZDNrVVk0NVZTaWxQQThQUWVyS1NpN1R6YWwxN0pnVXVndE5PT3Vvck1YTkJEc01LL0w2dGFMbGhxWWsKVXIyd256OE5Bb0dCQU9MT0FyTi93eGF3VzgwZXBVOHJIUUErOEhyTy9ISklSZW9BRytNcnRaMHZVN2lzSUQxaAoyTkcyOWdSQnlYVUp0dTB5aXRLUFF2UnZZMyt4bUgxSGRBRVBUMzVhSCsrNVNkWXpKeVp4VVFXYWo1VjR1aTVXCmNROUtlZGJRdStjanlHR3QzWGJKUVZVZWVVKzlOTWJIRjc0WktTcmk5dWtwallBbVl3T1BtcnJUQW9HQkFPNzUKRjN3bk9SaHc3bmw5bUxYZ0k3eERQcWhRcS9nVEUxSEJEWm10SzdEc1RhTE1pMW1wT212cVROVWZBNzNTTmxRRQpQK3hyeUpxdUg4RkxhYTNJeE9sOFZrOTZ6NW0wWlRMaFZFL2xNQm8zbVduMkRKekk1MklOUmUrckR6a0NiQmZNClN6TGFaa0JQZDQxME1kZmJGLzEzcyszRXhNcFFyS1UyQm5Gc1U2MkRBb0dCQU9ETjc1RjVucVpia2ZLallKa3oKRTZETndkRUlYdUxyemhpZG1RYTNxV0V1cXQ1T0JmcXhoSmFCc2lJUUR4M3B6aDRYemMvYzNqR29Rc2dzQVFpVQpEV0NMaTNDaTVpclh6bDc0L3VJMHlXa3poUVJUMEw3alFWYzFxOFNIeXVmVTZPWWd6blhTRCtiTnVOS1hxTHNxClZkYy8yelUrR0J5TjZrcE9RakFpWSt5dkFvR0FRUzdJYlNEMXZlanY0MHVTMytrblZpNnhaSSs4bUluN2R3MUYKZkdsenhXcHZNcnpBTmRDbkV0Qng3Si90RVZYSlk5bFU1bFB2LytFRzRGNkZrTlYyZ0lsZHNZZzZJQjdJaTd4Uwpsd2hZdW8zMzFxTTZoWGwzUTVPRFJBQlF3cWdhZTlOSm43RmF1cWZ5WUM4VmVWOVZoOW1peG5RcGlWWEFBY0JlCnVZbG11YWtDZ1lCV2R6eU1TVmcza08yYUtPVGtNYTN0Mmtrc3dEbE9QQWhST1NIYWRBMDhWaTU4OG1lVDhnUS8KS3FJR204V3J5c0ZGbncrM1BsRFN2WG5KR1VYa2FET014VWN5ZzI0NXFkQklpUEsydUVkVmhTcDhGQ0M3TGtMNgpIR0owRVI4ZUhkZC9IUCswQ1NmVU5WU0RwRUFIeGpYbXNZL1ZOOURWNEp3a0VjWmZXdGpGZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: dc26239e68c3a340640878b91dcb28debd1c3f3b4120993dd6a4ce9f770cca2f
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: morgoth.jahanson.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.3@sha256:fa7003cbfdf8358cb71786afebc711b26e5e44a2ed99bd4944930bba915b8910
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: ba3b233d4d779b2589d355b5c45f47da00e4d660cc8c5991fdbcffe0cc50ae2f
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.3@sha256:19e4aae5ff72cd9fbcb7d2d16a1570533320a478acc015fc91a4d41a177cadf6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: morgoth.jahanson.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: morgoth.jahanson.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: morgoth.jahanson.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
